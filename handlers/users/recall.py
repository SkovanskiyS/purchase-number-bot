from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.types import CallbackQuery, ReplyKeyboardRemove

from handlers.users.settings import cancel_handler
from keyboards.default.menu_btn import menuR_btns
from keyboards.inline.communication_inline import chatting_btn, recall_btns
from loader import dp, db, bot
from data.config import admins
from states.register_state import NewName, ActualNumber


@dp.message_handler(Text(equals="üìû–°–≤—è–∑–∞—Ç—å—Å—è"))
async def communication_handler(message: types.Message):
    result = db.get_white_list(message.from_user.id)
    if result[0]==0:
        await message.answer("üëá–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∏–∑ –Ω–∏–∂–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:", reply_markup=chatting_btn)
    else:
        await message.answer(
            "üõë<b>–í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ãüö´</b>\n–ß—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: @o101xd")


@dp.callback_query_handler(text='recall')
async def recall_inline(call: CallbackQuery):
    result = db.get_white_list(call.from_user.id)
    if result[0]==0:
        await call.message.delete()
        await call.message.answer(f"<b>–≠—Ç–æ –í–∞—à –≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b> "
                                  f"{db.select_user(call.from_user.id)[3]}? –ï—Å–ª–∏ –¥–∞, –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É, "
                                  f"–µ—Å–ª–∏ –Ω–µ—Ç, –≤–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∑–¥–µ—Å—å", reply_markup=recall_btns)


@dp.callback_query_handler(text='yes')
async def send_phone(call: CallbackQuery):
    result = db.get_white_list(call.from_user.id)
    if result[0]==0:
        await call.message.delete()
        await call.message.answer('‚úÖ<b>–û—Ç–ª–∏—á–Ω–æ!</b> –Ω–∞—à –¥–∏—Å–ø–µ—Ç—á–µ—Ä –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç –í–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.')

        await call.bot.send_message(admins[0], f"üì©<b>–ó–∞—è–≤–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∑–≤–æ–Ω–∞</b>\n–û—Ç: {db.select_user(call.from_user.id)[2]}"
                                           f"\n–Æ–∑–µ—Ä–Ω–µ–π–º: @{call.from_user.username}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +{db.select_user(call.from_user.id)[3]}")


@dp.callback_query_handler(text='leave_phone')
async def leave_phone(call: CallbackQuery, state=FSMContext):
    result = db.get_white_list(call.from_user.id)
    if result[0]==0:
        await call.message.delete()
        await call.message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n–û—Ç–º–µ–Ω–∞: /cancel",
                                  reply_markup=ReplyKeyboardRemove())
        await ActualNumber.actual_number.set()


@dp.message_handler(state=ActualNumber.actual_number)
async def new_phone(message: types.Message, state=FSMContext):
    result = db.get_white_list(message.from_user.id)
    if result[0]==0:
    # db.update_phone(message.text,message.from_user.id)
        await message.answer('‚úÖ<b>–û—Ç–ª–∏—á–Ω–æ!</b> –Ω–∞—à –¥–∏—Å–ø–µ—Ç—á–µ—Ä –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç –í–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.', reply_markup=menuR_btns)
        await bot.send_message(admins[0], f"üì©<b>–ó–∞—è–≤–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∑–≤–æ–Ω–∞</b>\n–û—Ç: {db.select_user(message.from_user.id)[2]}"
                                          f"\n–Æ–∑–µ—Ä–Ω–µ–π–º: @{message.from_user.username}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +{message.text}")
        await state.finish()


@dp.message_handler(state="*", commands='cancel')
@dp.message_handler(Text(equals='cancel', ignore_case=True), state="*")
async def cancel_handler(message: types.Message, state=FSMContext):
    result = db.get_white_list(message.from_user.id)
    if result[0]==0:
        current_state = await state.get_state()
        if current_state is None:
            return
        await state.finish()
        await message.answer("–û—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=menuR_btns)
