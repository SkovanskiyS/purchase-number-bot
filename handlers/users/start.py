import sqlite3

from aiogram import types
from aiogram.types import ReplyKeyboardRemove

from data.config import admins
from loader import dp, db
from aiogram.dispatcher import FSMContext
from states.register_state import SignUp
from aiogram.dispatcher.filters import Command

from keyboards.default.menu_btn import menuR_btns


@dp.message_handler(Command("start"))
async def welcome_message(message: types.Message):
    user_id = message.from_user.id
    result = db.get_white_list(message.from_user.id)

    if result is None or result[0]==0:
        try:
            if db.user_is_exist(user_id)[0] == user_id:
                await message.answer('‚úà<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</b> –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —á–∞—Ç-–±–æ—Ç–∞ –£–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ "–£–≠–†-–Æ–ì". '
                                     '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞—è–≤–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –¥–æ–º–æ–º. '
                                     '–ü—Ä–æ—Å—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ <b>–º–µ–Ω—é</b>, —á—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞:',
                                     reply_markup=menuR_btns)
        except:
            await message.answer(
                "üåº<b>–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞—è–≤–∫–∏ –∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º, –ø—Ä–∏—à–ª–∏—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –í–∞—à–µ <b>–ò–º—è</b> –∏ <b>–§–∞–º–∏–ª–∏—è</b>",
                reply_markup=ReplyKeyboardRemove())
            await SignUp.name.set()
    else:
        await message.answer(
            "üõë<b>–í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ãüö´</b>\n–ß—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: @o101xd")

@dp.message_handler(state=SignUp.name)
async def get_name(message: types.Message, state: FSMContext):
    answer = message.text
    from handlers.others.check_unicode import is_kiril
    name_and_surname = answer.split(' ')
    if ' ' in answer and is_kiril(answer) and name_and_surname[0].istitle() and name_and_surname[1].istitle():
        async with state.proxy() as data:
            data['full_name'] = answer
        from keyboards.default import signUp_btn
        await message.answer(
            "üìû–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∞—à <b>–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b> —á–µ—Ä–µ–∑ <b>+7</b> –∏–ª–∏ <b>+998</b> —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º:",
            reply_markup=signUp_btn.phone_number_btn)

        await SignUp.next()
    else:
        await message.answer(
            "‚õîüìõ<b>–ò–º—è</b> –∏ <b>–§–∞–º–∏–ª–∏—è</b> –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–≤–µ–¥–µ–Ω—ã —á–µ—Ä–µ–∑ –æ–¥–∏–Ω –ø—Ä–æ–±–µ–ª, –∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã —á–µ—Ä–µ–∑ –∫–∏—Ä–∏–ª–ª–∏—Ü—É. –¢–∞–∫–∂–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã. <b>–£—á—Ç–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:</b>")
        # await SignUp.name.set()
    # phone_number_btn = types.ReplyKeyboardRemove()


@dp.message_handler(content_types=['contact', 'text'], state=SignUp.phone_number)
async def get_name(message: types.Message, state: FSMContext):
    warn_text = "‚õî‚ùå‚õî<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b> –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 11 –∏–ª–∏ 13 —Ü–∏—Ñ—Ä –∏ –¥–æ–ª–∂–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤ –Ω–∞—á–∞–ª–µ <b>+7 –∏–ª–∏ +998. –£—á—Ç–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:</b>"
    phone_number = ""
    if message.text == None:
        phone_number = message.contact.phone_number
    else:
        phone_number = message.text
    phone_number = phone_number.replace(' ', '')

    if phone_number.startswith("+7") or phone_number.startswith("998") and len(phone_number) == 12 or len(phone_number)==13:
        async with state.proxy() as data:
            data['phone_number'] = phone_number
        data = await state.get_data()
        try:
            db.add_user(id=message.from_user.id, fullname=data.get('full_name'), phone=data.get('phone_number'),username=message.from_user.username)
            await message.answer(
                '‚úÖ<b>–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</b>\n\n‚úà<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</b> –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —á–∞—Ç-–±–æ—Ç–∞ –£–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ "–£–≠–†-–Æ–ì". '
                '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞—è–≤–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –¥–æ–º–æ–º. '
                '–ü—Ä–æ—Å—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ <b>–º–µ–Ω—é</b>, —á—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞:',
                reply_markup=menuR_btns)
        except sqlite3.IntegrityError as err:
            await message.answer(str(err))

        await state.reset_state()
    else:
        print(len(phone_number))
        await message.answer(warn_text)
